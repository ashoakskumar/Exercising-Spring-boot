Spring boot uses apache common logging for internal logging
1. Can configure file level as well as console level logging
2. Loggin pattern - Data & time , log level - INFO, ERROR & WARN, Process Id, ... sperator, Thread name ,logger name that shows source class name,  log message
3. to enaable debug log , add debug= true in appln props.
4. To log in external file path add logging.file.path=D:/resources/log/ or logging.file.name=D:/resources/log/mylog.log
5. To customize log entries, we can add log level, file or console output in log back file then store in boot classpath
	5.1 logback - debug logger for specific package - logging.level.com.example.*=DEBUG
	5.2 logback file & console - logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n
								 logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n
6. logging.level.root=INFO - info level for all package.
7. appln prop file
	debug=true
logging.file.path=D:/resources/log/
logging.file.name=D:/resources/log/mylog.log
logging.level.com.example.*=DEBUG
logging.level.root=info
#logging.path=logs
#logging.file=${logging.path}/log.log
logging.pattern.file=%d{dd-MM-yyyy HH:mm:ss.SSS} [%thread] %-5level %logger{36}.%M - %msg%n
logging.pattern.console=%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n